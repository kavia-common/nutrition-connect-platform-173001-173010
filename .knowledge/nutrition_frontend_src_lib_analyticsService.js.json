{"is_source_file": true, "format": "JavaScript", "description": "This file contains functions for fetching analytics and reporting data related to clients, coaches, and platform metrics. It includes several exported async functions that interact with a database via a Supabase client, attempting to retrieve data from views first and falling back to table counts or placeholder data when necessary.", "external_files": ["./supabaseClient"], "external_methods": ["getSupabaseClient"], "published": ["getClientProgress", "getCoachPortfolio", "getAdminMetrics"], "classes": [], "methods": [{"name": "getClientProgress(userId, { days = 30 } = {})", "description": "Fetches a client's progress timeseries, attempting to get data from a dedicated view, then falling back to checkins data, and finally providing dummy placeholder data.", "scope": "", "scopeKind": ""}, {"name": "getCoachPortfolio(userId)", "description": "Returns portfolio metrics for a coach, such as active clients, plans, assignments, messages, and estimated revenue. It first attempts to retrieve data from a dedicated view, then falls back to counting related tables.", "scope": "", "scopeKind": ""}, {"name": "getAdminMetrics()", "description": "Provides platform-wide metrics, such as user counts, messages, plans, and derived metrics like revenue and growth. It tries a view first, then computes counts for individual tables for fallbacks.", "scope": "", "scopeKind": ""}], "calls": ["getSupabaseClient", "supabase.from('client_progress_view').select(...)", "supabase.from('checkins').select(...)", "supabase.from('coach_portfolio_view').select(...)", "supabase.from('plans').select(...)", "supabase.from('plan_assignments').select(...)", "supabase.from('conversations').select(...)", "supabase.from('messages').select(...)", "supabase.from('admin_metrics_view').select(...)", "supabase.from('profiles').select(...)", "supabase.from('plans').select(...)", "supabase.from('messages').select(...)"], "search-terms": ["analytics", "client progress timeseries", "coach portfolio", "platform metrics", "supabase views", "fallback data", "fetch client data", "fetch coach data", "fetch admin data"], "state": 2, "file_id": 73, "knowledge_revision": 217, "git_revision": "", "revision_history": [{"197": ""}, {"217": ""}], "ctags": [{"_type": "tag", "name": "getAdminMetrics", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/analyticsService.js", "pattern": "/^export async function getAdminMetrics() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getClientProgress", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/analyticsService.js", "pattern": "/^export async function getClientProgress(userId, { days = 30 } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, { days = 30 } = {})"}, {"_type": "tag", "name": "getCoachPortfolio", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/analyticsService.js", "pattern": "/^export async function getCoachPortfolio(userId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId)"}], "hash": "5019d0f51889a2249079918ca8b0b830", "format-version": 4, "code-base-name": "nutrition_frontend", "filename": "nutrition_frontend/src/lib/analyticsService.js"}