{"is_source_file": true, "format": "JavaScript", "description": "This file provides a set of asynchronous functions to manage plans and plan items in a health/nutrition application, including creation, updating, deletion, fetching, and assignment linking to clients. It interacts with a database via a Supabase client.", "external_files": ["./supabaseClient"], "external_methods": ["getSupabaseClient"], "published": ["createPlan", "updatePlan", "deletePlan", "fetchPlansByCoach", "fetchPlanWithItems", "assignPlanToClient", "fetchAssignmentsForPlan"], "classes": [], "methods": [{"name": "createPlan({ coach_id, name, type = 'nutrition', notes = '', items = [] })", "description": "Creates a new plan with optional items, inserting into 'plans' and 'plan_items' tables.", "scope": "", "scopeKind": ""}, {"name": "updatePlan(planId, fields = {}, { replaceItems = null } = {})", "description": "Updates an existing plan's fields and optionally replaces its items.", "scope": "", "scopeKind": ""}, {"name": "deletePlan(planId)", "description": "Deletes a plan and its associated items from the database.", "scope": "", "scopeKind": ""}, {"name": "fetchPlansByCoach(coach_id)", "description": "Retrieves all plans associated with a specific coach, including item counts.", "scope": "", "scopeKind": ""}, {"name": "fetchPlanWithItems(planId)", "description": "Fetches a specific plan along with its ordered items.", "scope": "", "scopeKind": ""}, {"name": "assignPlanToClient({ plan_id, client_id, start_date = null, end_date = null, status = 'active' })", "description": "Creates or upserts a record linking a plan to a client, including assignment period and status.", "scope": "", "scopeKind": ""}, {"name": "fetchAssignmentsForPlan(plan_id)", "description": "Retrieves assignments for a plan, enriched with client profile info when available.", "scope": "", "scopeKind": ""}], "calls": ["getSupabaseClient", "supabase.from('plans').insert", "supabase.from('plan_items').insert", "supabase.from('plans').update", "supabase.from('plan_items').delete", "supabase.from('plans').delete", "supabase.from('plans').select", "supabase.from('plan_items').select", "supabase.from('plan_assignments').upsert", "supabase.from('plan_assignments').select", "supabase.from('profiles').select"], "search-terms": ["plansService", "createPlan", "updatePlan", "deletePlan", "fetchPlansByCoach", "fetchPlanWithItems", "assignPlanToClient", "fetchAssignmentsForPlan", "plan_items", "plan_assignments"], "state": 2, "file_id": 59, "knowledge_revision": 157, "git_revision": "", "ctags": [{"_type": "tag", "name": "assignPlanToClient", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function assignPlanToClient({ plan_id, client_id, start_date = null, end_date = nul/", "language": "JavaScript", "kind": "function", "signature": "({ plan_id, client_id, start_date = null, end_date = null, status = 'active' })"}, {"_type": "tag", "name": "coach_id", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^      coach_id,$/", "language": "JavaScript", "kind": "field", "scope": "createPlan.insertPayload", "scopeKind": "class"}, {"_type": "tag", "name": "createPlan", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function createPlan({ coach_id, name, type = 'nutrition', notes = '', items = [] })/", "language": "JavaScript", "kind": "function", "signature": "({ coach_id, name, type = 'nutrition', notes = '', items = [] })"}, {"_type": "tag", "name": "deletePlan", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function deletePlan(planId) {$/", "language": "JavaScript", "kind": "function", "signature": "(planId)"}, {"_type": "tag", "name": "fetchAssignmentsForPlan", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function fetchAssignmentsForPlan(plan_id) {$/", "language": "JavaScript", "kind": "function", "signature": "(plan_id)"}, {"_type": "tag", "name": "fetchPlanWithItems", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function fetchPlanWithItems(planId) {$/", "language": "JavaScript", "kind": "function", "signature": "(planId)"}, {"_type": "tag", "name": "fetchPlansByCoach", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function fetchPlansByCoach(coach_id) {$/", "language": "JavaScript", "kind": "function", "signature": "(coach_id)"}, {"_type": "tag", "name": "plan_id", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^    const payload = { plan_id, client_id, start_date, end_date, status };$/", "language": "JavaScript", "kind": "field", "scope": "assignPlanToClient.payload", "scopeKind": "class"}, {"_type": "tag", "name": "updatePlan", "path": "/home/kavia/workspace/code-generation/nutrition-connect-platform-173001-173010/nutrition_frontend/src/lib/plansService.js", "pattern": "/^export async function updatePlan(planId, fields = {}, { replaceItems = null } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(planId, fields = {}, { replaceItems = null } = {})"}], "hash": "7985551b3ad19002dd0989a26fca6a3a", "format-version": 4, "code-base-name": "nutrition_frontend", "filename": "nutrition_frontend/src/lib/plansService.js", "fields": [{"name": "coach_id,", "scope": "createPlan.insertPayload", "scopeKind": "class", "description": "unavailable"}, {"name": "const payload = { plan_id, client_id, start_date, end_date, status };", "scope": "assignPlanToClient.payload", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"157": ""}]}